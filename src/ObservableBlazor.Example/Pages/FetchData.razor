@page "/fetchdata"
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

<ObservableSection>
    @if (forecasts.Bind(context) == null)
    {
        <p><em>Loading... (3s delay)</em></p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Temp. (C)</th>
                    <th>Temp. (F)</th>
                    <th>Summary</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var forecast in forecasts.Bind(context))
                {
                    <tr>
                        <td>@forecast.Date.ToShortDateString()</td>
                        <td>@forecast.TemperatureC</td>
                        <td>@forecast.TemperatureF</td>
                        <td>@forecast.Summary</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</ObservableSection>
@code {
    private ISubject<WeatherForecast[]> forecasts = new Subject<WeatherForecast[]>();

    protected override async Task OnInitializedAsync()
    {

        await Task.Delay(3000);
        var newForecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");

        forecasts.OnNext(newForecasts);
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}